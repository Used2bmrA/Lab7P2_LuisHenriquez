
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */

/**
 *
 * @author h_lah
 */
public class Principal extends javax.swing.JFrame {

    /**
     * Creates new form Principal
     */
    public Principal() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        pp_tableMenu = new javax.swing.JPopupMenu();
        jmi_rcClearTable = new javax.swing.JMenuItem();
        pp_treeMenu = new javax.swing.JPopupMenu();
        jmi_rcLoadFile = new javax.swing.JMenuItem();
        jmi_rcRefreshTrees = new javax.swing.JMenuItem();
        jPanel1 = new javax.swing.JPanel();
        tf_CMD = new javax.swing.JTextField();
        bt_entre = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        tree_arbol = new javax.swing.JTree();
        jScrollPane2 = new javax.swing.JScrollPane();
        table_tabla = new javax.swing.JTable();
        jMenuBar1 = new javax.swing.JMenuBar();
        jMenu1 = new javax.swing.JMenu();
        jmi_newFile = new javax.swing.JMenuItem();
        jmi_importFile = new javax.swing.JMenuItem();
        jMenu2 = new javax.swing.JMenu();
        jMenu4 = new javax.swing.JMenu();
        jmi_clearCMD = new javax.swing.JMenuItem();
        jmi_clearTable = new javax.swing.JMenuItem();
        jmi_refreshTree = new javax.swing.JMenuItem();
        jMenu3 = new javax.swing.JMenu();
        jmi_productStructure = new javax.swing.JMenuItem();
        jmi_commands = new javax.swing.JMenuItem();

        jmi_rcClearTable.setText("Clear table");
        jmi_rcClearTable.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jmi_rcClearTableActionPerformed(evt);
            }
        });
        pp_tableMenu.add(jmi_rcClearTable);

        jmi_rcLoadFile.setText("Load File");
        jmi_rcLoadFile.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jmi_rcLoadFileActionPerformed(evt);
            }
        });
        pp_treeMenu.add(jmi_rcLoadFile);

        jmi_rcRefreshTrees.setText("Refresh Trees");
        jmi_rcRefreshTrees.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jmi_rcRefreshTreesActionPerformed(evt);
            }
        });
        pp_treeMenu.add(jmi_rcRefreshTrees);

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setBackground(new java.awt.Color(204, 204, 204));
        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        tf_CMD.setBackground(new java.awt.Color(255, 255, 255));
        tf_CMD.setForeground(new java.awt.Color(0, 0, 0));
        jPanel1.add(tf_CMD, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 10, 540, 50));

        bt_entre.setText("Enter");
        bt_entre.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                bt_entreMouseClicked(evt);
            }
        });
        jPanel1.add(bt_entre, new org.netbeans.lib.awtextra.AbsoluteConstraints(560, 10, 100, 50));

        javax.swing.tree.DefaultMutableTreeNode treeNode1 = new javax.swing.tree.DefaultMutableTreeNode("root");
        tree_arbol.setModel(new javax.swing.tree.DefaultTreeModel(treeNode1));
        tree_arbol.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tree_arbolMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tree_arbol);

        jPanel1.add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 70, 140, 340));

        table_tabla.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null}
            },
            new String [] {
                "ID", "Name", "Category", "Price", "Aisle", "Bin"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.String.class, java.lang.String.class, java.lang.Double.class, java.lang.Integer.class, java.lang.Integer.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        table_tabla.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                table_tablaMouseClicked(evt);
            }
        });
        jScrollPane2.setViewportView(table_tabla);

        jPanel1.add(jScrollPane2, new org.netbeans.lib.awtextra.AbsoluteConstraints(160, 70, 500, 340));

        jMenu1.setText("File");

        jmi_newFile.setText("New File");
        jmi_newFile.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jmi_newFileActionPerformed(evt);
            }
        });
        jMenu1.add(jmi_newFile);

        jmi_importFile.setText("Import File");
        jmi_importFile.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jmi_importFileActionPerformed(evt);
            }
        });
        jMenu1.add(jmi_importFile);

        jMenuBar1.add(jMenu1);

        jMenu2.setText("Window");

        jMenu4.setText("Clear");

        jmi_clearCMD.setText("Clear Command");
        jmi_clearCMD.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jmi_clearCMDActionPerformed(evt);
            }
        });
        jMenu4.add(jmi_clearCMD);

        jmi_clearTable.setText("Clear Table");
        jmi_clearTable.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jmi_clearTableActionPerformed(evt);
            }
        });
        jMenu4.add(jmi_clearTable);

        jMenu2.add(jMenu4);

        jmi_refreshTree.setText("Refresh Trees");
        jMenu2.add(jmi_refreshTree);

        jMenuBar1.add(jMenu2);

        jMenu3.setText("Help");

        jmi_productStructure.setText("Product Structure");
        jmi_productStructure.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jmi_productStructureActionPerformed(evt);
            }
        });
        jMenu3.add(jmi_productStructure);

        jmi_commands.setText("Commands");
        jmi_commands.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jmi_commandsActionPerformed(evt);
            }
        });
        jMenu3.add(jmi_commands);

        jMenuBar1.add(jMenu3);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 673, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, 480, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void bt_entreMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_bt_entreMouseClicked
        String line = tf_CMD.getText();
        String [] cmd = line.split(" ");
        
        tf_CMD.setText("");
        
        if (cmd.length== 3) {
            if(cmd[0].equals("./create")){
                if (!line.contains(" -single")) {
                    JOptionPane.showMessageDialog(this, "Error porque falt√≥ el \" -single\"");
                }else{
                    
                    for (int i = 0; i < table_tabla.getColumnCount(); i++) {
                        table_tabla.getValueAt(i, 0);
                        table_tabla.getValueAt(i, 1);
                        table_tabla.getValueAt(i, 2);
                        table_tabla.getValueAt(i, 3);
                        table_tabla.getValueAt(i, 4);
                        table_tabla.getValueAt(i, 5);
                        
                        
                    }
                    
                }
            }else{
                JOptionPane.showMessageDialog(this, "Comando no reconocido.");
            }
        }else{
            Commands(cmd[0], cmd[1]);
        }
        
    }//GEN-LAST:event_bt_entreMouseClicked

    private void jmi_productStructureActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jmi_productStructureActionPerformed
        JOptionPane.showMessageDialog(this, "ID: Un n√∫mero entero para identificar el producto\n"
                + "Name: El nombre del producto\n"
                + "Category: La categor√≠a del producto\n"
                + "Price: El precio del producto\n"
                + "Aisle: El n√∫mer del pasillo donde se guarda el producto\n"
                + "Bin: Lugar en el pasillo donde se guarda el producto");
    }//GEN-LAST:event_jmi_productStructureActionPerformed

    private void jmi_commandsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jmi_commandsActionPerformed
        JOptionPane.showMessageDialog(this, "Comando: .\"/load\": Carga un archivo a la tabla\n"
                + "Comando: \"./create\": Crea un archivo partiendo de la informaci√≥n agregada a la tabla. "
                + "(Recuerde agregar \" -single\" despu√©s del nombre de archivo)\n"
                + "Comando: \"./clear\": Vacia todos los datos contenidos en la tabla\n"
                + "Comando: \"./refresh\": Se refrescan los √°rboles del programa");
    }//GEN-LAST:event_jmi_commandsActionPerformed

    private void table_tablaMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_table_tablaMouseClicked
        if (evt.getButton() == 3) {
            pp_tableMenu.show(evt.getComponent(), evt.getX(), evt.getY());
        }
    }//GEN-LAST:event_table_tablaMouseClicked

    private void tree_arbolMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tree_arbolMouseClicked
        if (evt.getButton() == 3) {
            pp_treeMenu.show(evt.getComponent(), evt.getX(), evt.getY());
        }
    }//GEN-LAST:event_tree_arbolMouseClicked

    private void jmi_rcLoadFileActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jmi_rcLoadFileActionPerformed
        String nombre = JOptionPane.showInputDialog("Ingrese el nombre del archivo:");
        Load(nombre);
    }//GEN-LAST:event_jmi_rcLoadFileActionPerformed

    private void jmi_clearCMDActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jmi_clearCMDActionPerformed
        tf_CMD.setText("");
    }//GEN-LAST:event_jmi_clearCMDActionPerformed

    private void jmi_importFileActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jmi_importFileActionPerformed
       String nombre = JOptionPane.showInputDialog("Ingrese el nombre del archivo:");
       Load(nombre);
    }//GEN-LAST:event_jmi_importFileActionPerformed

    private void jmi_rcClearTableActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jmi_rcClearTableActionPerformed
        Clear();
    }//GEN-LAST:event_jmi_rcClearTableActionPerformed

    private void jmi_clearTableActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jmi_clearTableActionPerformed
        Clear();
    }//GEN-LAST:event_jmi_clearTableActionPerformed

    private void jmi_newFileActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jmi_newFileActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jmi_newFileActionPerformed

    private void jmi_rcRefreshTreesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jmi_rcRefreshTreesActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jmi_rcRefreshTreesActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Principal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Principal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Principal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Principal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Principal().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton bt_entre;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenu jMenu2;
    private javax.swing.JMenu jMenu3;
    private javax.swing.JMenu jMenu4;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JMenuItem jmi_clearCMD;
    private javax.swing.JMenuItem jmi_clearTable;
    private javax.swing.JMenuItem jmi_commands;
    private javax.swing.JMenuItem jmi_importFile;
    private javax.swing.JMenuItem jmi_newFile;
    private javax.swing.JMenuItem jmi_productStructure;
    private javax.swing.JMenuItem jmi_rcClearTable;
    private javax.swing.JMenuItem jmi_rcLoadFile;
    private javax.swing.JMenuItem jmi_rcRefreshTrees;
    private javax.swing.JMenuItem jmi_refreshTree;
    private javax.swing.JPopupMenu pp_tableMenu;
    private javax.swing.JPopupMenu pp_treeMenu;
    private javax.swing.JTable table_tabla;
    private javax.swing.JTextField tf_CMD;
    private javax.swing.JTree tree_arbol;
    // End of variables declaration//GEN-END:variables

    private void Commands(String cmd, String name) {
        if (cmd.equals("./load")) {
            Load(("./" + name));
        }else if(cmd.equals("./clear")){
            Clear();
        }else if(cmd.equals("./refresh")){
            
        }else if(cmd.equals("")){
            JOptionPane.showMessageDialog(this, "Ingrese un comando.");
        }else{
            JOptionPane.showMessageDialog(this, "Comando no reconocido.");
        }
    }

    private void Load(String location) {
        AdministrarProductos admin = new AdministrarProductos(location);
        admin.cargarArchivo();
        DefaultTableModel modelo = (DefaultTableModel) table_tabla.getModel();
        modelo.setRowCount(0);
        
        for (int i = 0; i < admin.getProductos().size(); i++) {
                Producto productoActual = admin.getProductos().get(i);
                Object[] arr = new Object[6];
                arr[0] = productoActual.getId();
                arr[1] = productoActual.getName();
                arr[2] = productoActual.getCategory();
                arr[3] = productoActual.getPrice();
                arr[4] = productoActual.getAisle();
                arr[5] = productoActual.getBin();
                modelo.addRow(arr);
        }
        
        table_tabla.setModel(modelo);
    }

    private void Clear() {
        DefaultTableModel modelo  = (DefaultTableModel) table_tabla.getModel();
        String [] columnNames = new String[6];
        columnNames[0] = "ID";
        columnNames[1] = "Name";
        columnNames[2] = "Category";
        columnNames[3] = "Price";
        columnNames[4] = "Aisle";
        columnNames[5] = "Bin";
        
        modelo = new DefaultTableModel(columnNames, 20);
        modelo.setRowCount(20);
        table_tabla.setModel(modelo);
    }
}
